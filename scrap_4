    

      # new_pos = params[:new_pos].to_i - 1 
      # entry_to_move = self.entries.find(:entry_id)

#      project_array = project_array_original.map{|x| x} 

      # i = 0
      # project_array_original.each do |entry|
      #   entry.position = i
      #   i += 1
      #   entry.save!
      # end

      # i = 0
      # project_array_original.each do |entry|
      #   # entry.position = i
      #   # i += 1
      #   #binding.pry
      #   entry.save!
      # end
      # binding.pry

      # 




      # entry.save

      # project_array.update_position

      # return project_array

      # entries = self.entries
      #ordered_entries = entries.order(position: :desc)




    # def ordered_entries
  #   entries = self.entries
  #   entries.sort do |entry_a, entry_b|
  #     entry_a.position_in_project(self) <=> entry_b.position_in_project(self)
  #   end
  # end


  # def position_in_project(project)
  #   self.joiners.find_by(project: project).position
  # end

    # @entry.position = (project.entries.order(position: :desc).first.position || 0) + 1
    # @entry.save!



    # project_array.insert(new_pos, entry_to_move)
    # project_array.delete_at(entry_to_move)

    # i = 0
    # project_array.each do |entry|
    #   entry.position = i
    #   i += 1
    #   project_array << entry
    # end


      # if @entry.project_id != nil
    #   Joiner.create({
    #     project_id: @entry.project_id,
    #     entry_id: @entry.id,
    #     position: nil,
    #     rating: 0
    #     })

    # else
    # redirect_to "/users/#{current_user.id}"     

    # end

    # Entry.create(entry_attributes)

    # .new(entry_attributes)
    # @entry.save



# before_filter :authorize, :except => [:index, :show]
# # before_filter :authorize, :only => :delete
# before_action :authenticate_with_basic_auth




  # def login

  # end


  # def process_login
  #     email = params[:email]
  #     password = params[:password]

  #     @current_user = User.authenticated?(email, password)

  #     if @current_user
  #       redirect_to "/users/:id"
  #     else
  #       render text: "Login Failed! Invalid email or password!"
  #     end
    
  # end






  # post "/users/:user_id/projects/:project_id/joiners" => "joiners#create"


  #add to project route
  # post "/users/:user_id/projects/:project_id/entries/:id/joiners" => "joiners#create"


<%= form_for @joiner, url: "/users/:user_id/joiners", method: "post" do |f| %>
  <%= f.hidden_field :project_id, value: @project.id %>
  <%= f.hidden_field :entry_id, value: @entry.id %>
  <%= f.submit "Add TO PROJECT" %>
<% end %>


<%= form_for @joiner, url: "/users/:user_id/projects/:project_id/entries/:id", method: "patch" do |f| %>
  <%= f.hidden_field :project_id, value: @project.id %>
  <%= f.hidden_field :entry_id, value: @entry.id %>
  <%= f.submit "Add TO PROJECT" %>
<% end %>


@entry = Entry.find(params[:id])




#   # show individual project


#   # create project entry




# #user homepage
# # get "/users/:id" => "users#show"






# get "/users/:user_id/projects/:id" => "projects#show"

# get "/users/:user_id/projects/:id/edit" => "projects#edit"

# patch "/users/:user_id/projects/:id" => "projects#update"

# delete "/users/:user_id/projects/:id" => "projects#destroy"




# #user project page




# get "/users/:user_id/projects/:project_id/entries/:id" => "entries#edit"

# patch "/users/:user_id/projects/:project_id/entries/:id" => "entries#update"

# delete "/users/:user_id/projects/:project_id/entries/:id" => "entries#destroy"



# #user entry page



# get "/users/:user_id/entries/:id/edit" => "entries#edit"

# patch "/users/:user_id/entries/:id/edit" => "entries#update"

# delete "/users/:user_id/entries/:id/edit" => "entries#destroy"



  # # get ALL users - edited to show all projects
  # get "/users" => "users#index"

  # # get ONE user
  # get "/users/:id" => "users#show"

  # # show NEW user form
  # get "/user/new" => "users#new"

  # # process chef CREATE action from form
  # post "/users" => "users#create"

  # # show LOGIN form
  # get "/user/login" => "users#login"

  # # process login form
  # post "/user/login" => "users#process_login"


